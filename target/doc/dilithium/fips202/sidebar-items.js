window.SIDEBAR_ITEMS = {"constant":[["KECCAKF_ROUNDCONSTANTS","Keccak round constants"],["NROUNDS",""],["SHAKE128_RATE",""],["SHAKE256_RATE",""]],"fn":[["keccak_absorb","Absorb step of Keccak; incremental."],["keccak_absorb_once","Absorb step of Keccak; non-incremental, starts by zeroeing the state."],["keccak_finalize","Finalize absorb step."],["keccak_squeeze","Squeeze step of Keccak. Squeezes arbitratrily many bytes. Modifies the state. Can be called multiple times to keep squeezing, i.e., is incremental."],["keccak_squeezeblocks","Squeeze step of Keccak. Squeezes full blocks of r bytes each. Modifies the state. Can be called multiple times to keep squeezing, i.e., is incremental. Assumes zero bytes of current block have already been squeezed."],["keccakf1600_statepermute","The Keccak F1600 Permutation"],["load64","Load 8 bytes into uint64_t in little-endian order"],["rol","No rolling defined in the language so got to do it ourselfs :("],["shake128_absorb","Absorb step of the SHAKE128 XOF; incremental."],["shake128_finalize","Finalize absorb step of the SHAKE128 XOF."],["shake128_squeezeblocks","Squeeze step of SHAKE128 XOF. Squeezes full blocks of SHAKE128_RATE bytes each. Can be called multiple times to keep squeezing. Assumes new block has not yet been started (state->pos = SHAKE128_RATE)."],["shake128_stream_init",""],["shake256","SHAKE256 XOF with non-incremental API"],["shake256_absorb","Absorb step of the SHAKE256 XOF; incremental."],["shake256_absorb_once","Initialize, absorb into and finalize SHAKE256 XOF; non-incremental."],["shake256_finalize","Finalize absorb step of the SHAKE256 XOF."],["shake256_squeeze","Squeeze step of SHAKE256 XOF. Squeezes arbitraily many bytes. Can be called multiple times to keep squeezing."],["shake256_squeezeblocks","Squeeze step of SHAKE256 XOF. Squeezes full blocks of SHAKE256_RATE bytes each. Can be called multiple times to keep squeezing. Assumes next block has not yet been started (state.pos = SHAKE256_RATE)."],["shake256_stream_init",""],["store64","Store a 64-bit integer to array of 8 bytes in little-endian order"]],"struct":[["KeccakState","1600-bit state of the algorithm, with an index of curent position."]]};